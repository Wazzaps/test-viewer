commit 2c2c044dc8984107c0df81e11c268a05d018b31e
Author: Avshalom Toren <47110179+avshalomt2@users.noreply.github.com>
Date:   Sun Aug 3 18:01:54 2025 +0300

    filter by status

diff --git a/src/components/TestResultsCard.tsx b/src/components/TestResultsCard.tsx
index e27b26f..aa45746 100644
--- a/src/components/TestResultsCard.tsx
+++ b/src/components/TestResultsCard.tsx
@@ -1,3 +1,4 @@
+import { useState } from 'react';
 import { FlaskConicalOff } from 'lucide-react';
 import { Card, CardContent, CardHeader } from '@/components/ui/card';
 import { TestResultItem } from './TestResultItem';
@@ -11,6 +12,8 @@ interface TestResultsCardProps {
   onToggleTestExpansion: (testName: string) => void;
 }
 
+const FILTERED_OUT = ' opacity-60 line-through';
+
 export function TestResultsCard({
   testResults,
   loading,
@@ -23,6 +26,11 @@ export function TestResultsCard({
     failed: testResults.filter((t) => t.status === 'failed').length,
     skipped: testResults.filter((t) => t.status === 'skipped').length,
   };
+  const [statusesToShow, setStatusesToShow] = useState<Record<TestResult['status'], boolean>>({
+    passed: true,
+    failed: true,
+    skipped: true,
+  });
 
   return (
     <Card>
@@ -33,20 +41,46 @@ export function TestResultsCard({
             <div className="flex items-center gap-4">
               <div className="flex items-center gap-2 text-sm">
                 <span
-                  className={stats.failed > 0 ? 'text-red-600 dark:text-red-400' : 'text-gray-400 dark:text-gray-500'}
+                  className={
+                    stats.failed > 0
+                      ? 'text-red-600 dark:text-red-400' + (!statusesToShow.failed ? FILTERED_OUT : '')
+                      : 'text-gray-400 dark:text-gray-500'
+                  }
+                  onClick={() =>
+                    setStatusesToShow((prevStatusesToShow) => ({
+                      ...prevStatusesToShow,
+                      failed: !prevStatusesToShow.failed,
+                    }))
+                  }
                 >
                   {stats.failed} failed
                 </span>
                 <span
                   className={
-                    stats.passed > 0 ? 'text-green-600 dark:text-green-400' : 'text-gray-400 dark:text-gray-500'
+                    stats.passed > 0
+                      ? 'text-green-600 dark:text-green-400' + (!statusesToShow.passed ? FILTERED_OUT : '')
+                      : 'text-gray-400 dark:text-gray-500'
+                  }
+                  onClick={() =>
+                    setStatusesToShow((prevStatusesToShow) => ({
+                      ...prevStatusesToShow,
+                      passed: !prevStatusesToShow.passed,
+                    }))
                   }
                 >
                   {stats.passed} passed
                 </span>
                 <span
                   className={
-                    stats.skipped > 0 ? 'text-yellow-600 dark:text-yellow-400' : 'text-gray-400 dark:text-gray-500'
+                    stats.skipped > 0
+                      ? 'text-yellow-600 dark:text-yellow-400' + (!statusesToShow.skipped ? FILTERED_OUT : '')
+                      : 'text-gray-400 dark:text-gray-500'
+                  }
+                  onClick={() =>
+                    setStatusesToShow((prevStatusesToShow) => ({
+                      ...prevStatusesToShow,
+                      skipped: !prevStatusesToShow.skipped,
+                    }))
                   }
                 >
                   {stats.skipped} skipped
@@ -69,14 +103,16 @@ export function TestResultsCard({
               <p className="text-sm text-red-600 dark:text-red-400">{error}</p>
             </div>
           ) : testResults.length > 0 ? (
-            testResults.map((test) => (
-              <TestResultItem
-                key={test.id}
-                test={test}
-                isExpanded={expandedTests.has(test.id)}
-                onToggleExpansion={() => onToggleTestExpansion(test.id)}
-              />
-            ))
+            testResults
+              .filter((test) => statusesToShow[test.status])
+              .map((test) => (
+                <TestResultItem
+                  key={test.id}
+                  test={test}
+                  isExpanded={expandedTests.has(test.id)}
+                  onToggleExpansion={() => onToggleTestExpansion(test.id)}
+                />
+              ))
           ) : (
             <div className="text-center py-8">
               <FlaskConicalOff className="h-8 w-8 text-muted-foreground mx-auto mb-2" />
